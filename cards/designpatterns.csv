1 -- Describes a group of objects that are treated the same way as a single instance of the same type of object.
2 -- Enables selecting an algorithm at runtime by providing a corresponding object implementing the algorithm.
3 -- Allows subclasses to specialize an algorithm by overriding specific methods that represent holes in the algorithm.
4 -- Traverse a container and access the container's elements without knowing the internals of the container.
5 -- Add behavior to an individual object, dynamically, without affecting the behavior of other objects from the same class.
6 -- Allows the interface of an existing class to be used as another interface.
7 -- An object that serves as a front-facing interface masking more complex underlying or structural code.
